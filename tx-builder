#!/usr/bin/env node

import { AuthInfo, Coin, LCDClient, MsgSend, Tx, TxBody } from "@terra-money/feather.js";
import { Command } from "commander";

const program = new Command();

let lcd = new LCDClient({
    'columbus-5': {
        lcd: "https://terra-classic-lcd.publicnode.com",
        chainID: "columbus-5",
        gasPrices: { uluna: 29.0 },
        gasAdjustment: 1.8,
        isClassic: true,
        prefix: 'terra',
    }
});

// TODO - DYNAMIC TAX RATE
let TAX_RATE = 0.005;

function taxCalc(amount) {
    let denom = amount.denom;
    const regex = RegExp(/^ibc\/[a-fA-F0-9]{64}$/);
    if (regex.test(denom)) {
        return amount.mul(0);
    }
    return coinAmount.mul(TAX_RATE);
}

async function buildMsgSend(from, to, amount) {
    let coinAmount = Coin.fromString(amount);
    let tax = taxCalc(coinAmount);
    let msg = new MsgSend(
        from,
        to,
        amount
    );
    try {
        let tx = await lcd.tx.create([{address: from}],{
            msgs: [msg],
            chainID: "columbus-5",
        })
        tx.auth_info.fee.amount = tx.auth_info.fee.amount.add(tax);
        return lcd.tx.encode(tx);
    } catch (e) {
        console.error(e);
    }
    
}

program
  .name('tx-builder')
  .description('CLI to build MultiSig TXs for Terra Classic')
  .version('1.0.0');

program.command('msg-send <from> <to> <amount>')
  .description('Build a MsgSend transaction')
  .action((from, to, amount, options) => {
    buildMsgSend(from, to, amount)
        .then((tx) => {
            console.log(tx);
        })
        .catch((e) => {
            console.error(e);
        });
  });

program.parse();
